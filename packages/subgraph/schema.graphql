type To @entity(immutable: true) {
  id: ID! # bytes32 identifier, probably an address but with room for chain-specific addresses if wanted.
  delegations: [Delegation!]! @derivedFrom(field: "to")
}

type From @entity(immutable: true) {
  id: ID! # address to identify from
  delegations: [Delegation!]! @derivedFrom(field: "from")
}

type Context @entity(immutable: true) {
  id: ID! # string to identify context
  delegations: [Delegation!]! @derivedFrom(field: "context")
  optouts: [Optout!]! @derivedFrom(field: "context")
}

type Optout @entity(immutable: true) {
  id: ID! # `${context.id}-${delegate}`
  delegate: Bytes
  context: Context!
}

type Delegation @entity(immutable: true) {
  id: ID! # `${context.id}-${from.id}-${to.id}`
  context: Context!
  from: From!
  to: To!
  ratio: BigInt!
  expiration: BigInt!
}
